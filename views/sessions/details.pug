extends ./sessions-layout

block content
  input#act-pie-chart-data(type='hidden' value=JSON.stringify(session.blocks))

  div.row
    div.col-xs-5
      h2 Session Details
    div.col-xs-7.text-right.button-list
      h2
        a.btn.btn-default(href='/sessions') Back to Session History
        a.btn.btn-info(href=session.urlEdit) Edit Session
        a.btn.btn-danger(href=session.urlDelete) Delete Session

  //- dl
  //-   dt Date
  //-   dd= session.timeDetails.startDateFormatted

  //-   dt Time
  //-   dd !{session.timeDetails.timeSpan} (!{session.timeDetails.durationInMin} min)

  div.row.vert-spacer-big
    div.col-xs-12
      ul.session-list
        li
          div.row
            div.col-xs-6.col-md-4
              span.session-list-date !{session.timeDetails.startDateFormatted}
              br
              span.session-list-time !{session.timeDetails.timeSpan}
              span &nbsp;
              span (!{session.timeDetails.swDur.default})
            div.col-xs-3.col-md-6
              each act in session.activityList
                span.session-list-act !{act}

  div.row
    div.col-xs-12
      div.panel.panel-default
        div.panel-heading.text-center Activites Log
        table.table
          thead
            tr
              th #
              th Activity
              th Duration
          tbody#activities-log
            each block, index in session.blocks
              tr
                td !{index+1}
                td !{block.activity.name}
                td !{block.timeDetails.swDur.default}
    div.col-xs-12
      canvas#act-pie-chart


block scripts
  script.
    $(function($){ // on document ready

      function prepareActPieChartData(blocks){
        var labels = blocks.map(b => b.activity.name).filter((elem, index, self) => index == self.indexOf(elem)); // unique list of activity names
        var backgroundColor = labels.map(l => blocks.filter(b => b.activity.name == l)[0].activity.color); // get color of activities-log
        var data = labels.map(l => blocks.filter(b => b.activity.name == l).map(b => b.durationInSec).reduce((a,b) => a+b, 0)); // sum of sec for each activity

        return {
          labels: labels,
          datasets: [{
            data: data,
            backgroundColor: backgroundColor
          }]
        }
      }

      var ctx = $('#act-pie-chart');
      //- var actPieChart = new Chart(ctx, {
      //-   type: 'doughnut',
      //-   data: {
      //-     labels: ['Sight Reading', 'Technique', 'Theory', 'Method Books', 'Focused Repertoire', 'Paused'],
      //-     datasets: [{
      //-       data: [10, 20, 30, 40, 50, 60],
      //-       backgroundColor: [
      //-         'rgba(255, 99, 132, 0.8)',
      //-         'rgba(54, 162, 235, 0.8)',
      //-         'rgba(75, 192, 192, 0.8)',
      //-         'rgba(2, 123, 59, 0.8)',
      //-         'rgba(129, 6, 193, 0.8)',
      //-         'rgba(224, 229, 101, 0.8)',
      //-       ],
      //-     }]
      //-   }
      //- });


      var ctx = $('#act-pie-chart');
      var actPieChart = new Chart(ctx, {
        type: 'doughnut',
        data: prepareActPieChartData(JSON.parse($('#act-pie-chart-data').val()))
      });
    });
